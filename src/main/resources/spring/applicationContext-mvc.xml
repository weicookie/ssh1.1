<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd"
       default-autowire="byName">

    <!-- 自动扫描的controller -->
    <context:component-scan base-package="com.harvey" use-default-filters="false">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
        <context:include-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
    </context:component-scan>

    <bean id="defaultHandler" class="org.springframework.web.servlet.HandlerExecutionChain">
        <constructor-arg index="0">
            <bean class="com.harvey.common.controller.EmptyHander"/>
        </constructor-arg>
    </bean>

    <!--BeanNameUrlHandlerMapping-->
     <bean class="org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping">
         <property name="defaultHandler" value="defaultHandler"></property>
         <!-- 拦截器注册 -->
         <property name="interceptors">
             <bean class="com.harvey.common.interceptor.SharedRenderVariableInterceptor"/>
         </property>
     </bean>

    <!-- 根据客户端的不同的请求决定不同的view进行响应, 如 /blog/1.json /blog/1.xml -->
    <bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
        <property name="contentNegotiationManager">
            <bean class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
                <property name="ignoreAcceptHeader" value="true"/>
                <property name="defaultContentType" value="text/html"/>
                <property name="mediaTypes">
                    <props>
                        <prop key="json">application/json</prop>
                        <prop key="xml">application/xml</prop>
                        <prop key="html">text/html</prop>
                        <prop key="ac">text/html</prop>
                    </props>
                </property>
                <property name="favorParameter" value="false"/>
            </bean>
        </property>
        <property name="viewResolvers">
            <list>
                <bean class="org.springframework.web.servlet.view.BeanNameViewResolver"/>
                <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
                    <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
                    <property name="prefix" value="/template/"/>
                    <property name="suffix" value=".jsp"/>
                </bean>
            </list>
        </property>
        <property name="defaultViews">
            <list>
                <!-- for application/json -->
                <bean class="org.springframework.web.servlet.view.json.MappingJackson2JsonView"/>
            </list>
        </property>
    </bean>

    <!--返回json数据，要加入jackson*.jar包-->
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
        <property name="ignoreDefaultModelOnRedirect" value="true"/>
        <property name="messageConverters">
            <list>
                <ref bean="mappingJacksonHttpMessageConverter"/>
            </list>
        </property>
    </bean>

    <!--MappingJackson2HttpMessageConverter spring4.x版本之前是MappingJacksonHttpMessageConverter-->
    <bean id="mappingJacksonHttpMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"/>



    <!--配置静态资源-->
    <mvc:default-servlet-handler/>

    <!-- 配置注解 -->
    <mvc:annotation-driven/>

    <!-- 文件上传 -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!--1024**1024*5即5M-->
        <property name="maxUploadSize" value="5242880"/>
        <property name="defaultEncoding" value="UTF-8"/>
        <property name="resolveLazily" value="true"/>
    </bean>

</beans>